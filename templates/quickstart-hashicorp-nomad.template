{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "QS(5035) HashiCorp Nomad License: Apache 2.0 (Please do not remove) April,24,2016",
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20170414"
            },
            "ap-northeast-1": {
                "US1604HVM": "ami-afb09dc8"
            },
            "ap-northeast-2": {
                "US1604HVM": "ami-66e33108"
            },
            "ap-south-1": {
                "US1604HVM": "ami-c2ee9dad"
            },
            "ap-southeast-1": {
                "US1604HVM": "ami-8fcc75ec"
            },
            "ap-southeast-2": {
                "US1604HVM": "ami-96666ff5"
            },
            "eu-central-1": {
                "US1604HVM": "ami-060cde69"
            },
            "eu-west-1": {
                "US1604HVM": "ami-a8d2d7ce"
            },
            "eu-west-2": {
                "US1604HVM": "ami-f1d7c395"
            },
            "sa-east-1": {
                "US1604HVM": "ami-4090f22c"
            },
            "us-east-1": {
                "US1604HVM": "ami-80861296"
            },
            "us-east-2": {
                "US1604HVM": "ami-618fab04"
            },
            "us-west-1": {
                "US1604HVM": "ami-2afbde4a"
            },
            "us-west-2": {
                "US1604HVM": "ami-efd0428f"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [{
                "Label": {
                    "default": " VPC Network Configuration"
                },
                "Parameters": [
                    "AvailabilityZones",
                    "PrivateSubnet1ID",
                    "PrivateSubnet2ID",
                    "PrivateSubnet3ID",
                    "AccessCIDR",
                    "VPCCIDR",
                    "VPCID"
                ]
            }, {
                "Label": {
                    "default": "Consul Client"
                },
                "Parameters": [
                    "ConsulEc2RetryTagKey",
                    "ConsulEc2RetryTagValue"
                ]
            }, {
                "Label": {
                    "default": "Nomad Setup"
                },
                "Parameters": [
                    "KeyPair",
                    "NomadInstanceType",
                    "NomadServerNodes",
                    "PrivateNomadClientNodes",
                    "MinPrivateNomadClientNodes"
                ]
            }, {
                "Label": {
                    "default": "AWS Quick Start Configuration"
                },
                "Parameters": [
                    "QSS3BucketName",
                    "QSS3KeyPrefix",
                    "QuickStartS3URL"
                ]
            }],
            "ParameterLabels": {
                "AccessCIDR": {
                    "default": "Permitted IP range"
                },
                "KeyPair": {
                    "default": "Key Pair Name"
                },
                "ConsulEc2RetryTagKey": {
                    "default": "Consul EC2 Retry Tag Key"
                },
                "ConsulEc2RetryTagValue": {
                    "default": "Consul EC2 Retry Tag Value"
                },
                "NomadServerNodes": {
                    "default": "Nomad Server Nodes"
                },
                "NomadInstanceType": {
                    "default": "Nomad Instance Type"
                },
                "MinPrivateNomadClientNodes": {
                    "default": "Minimum Private Nomad Client Nodes"
                },
                "PrivateNomadClientNodes": {
                    "default": "Private Nomad Client Nodes"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet 2 ID"
                },
                "PrivateSubnet3ID": {
                    "default": "Private Subnet 3 ID"
                },
		"QuickStartS3URL": {
		    "default": "The AWS S3 Root URL"
		},
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR block range"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "AccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "The CIDR IP range that is permitted to access Nomad Note: a value of 0.0.0.0/0 will allow access from ANY ip address",
            "Type": "String"
        },
        "ConsulEc2RetryTagKey": {
            "Description": "The Amazon EC2 instance tag key to filter on when joining to other Consul nodes.",
            "Type": "String",
            "Default": "aws:cloudformation:stack-name",
            "ConstraintDescription": "Must match EC2 Tag Name requirements."
        },
        "ConsulEc2RetryTagValue": {
            "Description": "The Amazon EC2 instance tag value to filter on when joining to other Consul nodes.",
            "Type": "String"
        },
        "KeyPair": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Default": "id_rsa_aws",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "MinPrivateNomadClientNodes": {
            "Default": "1",
            "Description": "Sets the minimum capacity for Nomad client nodes.",
            "Type": "String"
        },
        "NomadInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type. m4.large or larger recommended.",
            "Default": "m4.large",
            "Description": "The Nomad node instance type",
            "Type": "String"
        },
        "NomadServerNodes": {
            "AllowedValues": [
                "3",
                "5",
                "7"
            ],
            "Default": "3",
            "Description": "Sets the desired capacity and maximum size for Nomad server node cluster. Values should be: 3, 5, or 7 ",
            "Type": "String"
        },
        "PrivateNomadClientNodes": {
            "Default": "3",
            "Description": "Sets the desired capacity and Maximum size for Nomad client node cluster ",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-xxxxxxxx)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet3ID": {
            "Description": "ID of the private subnet 3 in Availability Zone 2 (e.g., subnet-xxxxxxxx)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*\/",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start with forward slash (/) because it is automatically appended.",
            "Default": "hashicorp/nomad/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start with forward slash (/) because it is automatically appended.",
            "Type": "String"
        },
        "QuickStartS3URL": {
            "ConstraintDescription": "S3Url",
            "Default": "https://s3.amazonaws.com",
            "Description": "AWS S3 Root Url",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Resources": {
        "NomadServerWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "NomadServerWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Handle": {
                    "Ref": "NomadServerWaitHandle"
                },
                "Count": {
                    "Ref": "NomadServerNodes"
                },
                "Timeout": "5000"
            }
        },
        "NomadClientWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "NomadClientWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Handle": {
                    "Ref": "NomadClientWaitHandle"
                },
                "Count": {
                    "Ref": "PrivateNomadClientNodes"
                },
                "Timeout": "5000"
            }
        },
        "NomadSecGroup": {
            "Properties": {
                "GroupDescription": "Enables all access within the VPC to the Nomad clusters",
                "SecurityGroupIngress": [{
                    "CidrIp": {
                        "Ref": "VPCCIDR"
                    },
                    "FromPort": "0",
                    "IpProtocol": "tcp",
                    "ToPort": "65535"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NomadSecGroup"
                }],
                "VpcId": {
                    "Ref": "VPCID"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "NomadServerASG": {
            "Properties": {
                "DesiredCapacity": {
                    "Ref": "NomadServerNodes"
                },
                "LaunchConfigurationName": {
                    "Ref": "NomadServerLaunchConfig"
                },
                "MaxSize": {
                    "Ref": "NomadServerNodes"
                },
                "MinSize": "3",
                "Tags": [{
                    "Key": "Name",
                    "PropagateAtLaunch": "true",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "NomadServer"
                            ]
                        ]
                    }
                }],
                "VPCZoneIdentifier": [{
                    "Ref": "PrivateSubnet1ID"
                }, {
                    "Ref": "PrivateSubnet2ID"
                }, {
                    "Ref": "PrivateSubnet3ID"
                }]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "NomadServerLaunchConfig": {
            "Metadata": {
                "AWS::CloudFormation::Init": {

                    "configSets": {
                        "nomad_install": [
                            "install_awscli"
                        ]
                    },
                    "install_awscli": {
                        "commands": {
                            "01_chmod_and_chown_nomad": {
                                "command": "chmod 0755 /usr/local/bin/nomad && chown root:root /usr/local/bin/nomad"
                            }
                        },
                        "commands": {
                            "02_install_awscli": {
                                "command": "pip install awscli"
                            }
                        },
                        "packages": {
                            "apt": {
                                "curl": [],
                                "unzip": []
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "nomadinstanceprofile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "US1604HVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "NomadInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroups": [{
                    "Ref": "NomadSecGroup"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -x\n",
                                "apt-get -y update\n",
                                "apt-get -y install  python-setuptools python-pip\n",
                                "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \n",
                                "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \n",
                                "apt-get -y update \n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n", {
                                    "Fn::Sub": [
                                        "wget https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/submodules/quickstart-hashicorp-consul/scripts/consul_client_bootstrap.sh\n", {
                                            "QSS3BucketName": {
                                                "Ref": "QSS3BucketName"
                                            },
                                            "QSS3KeyPrefix": {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        }
                                    ]
                                },
                                "",
                                "sleep 5 && which awscli\n",
                                "chmod 755 ./consul_client_bootstrap.sh\n", {
                                    "Fn::Sub": [
                                        "./consul_client_bootstrap.sh --consul_tag_key ${ConsulEc2RetryTagKey} --consul_tag_value ${ConsulEc2RetryTagValue} --s3url https://s3.amazonaws.com --s3bucket ${QSS3BucketName} --s3prefix ${QSS3KeyPrefix}", {
                                            "ConsulEc2RetryTagKey": {
                                                "Ref": "ConsulEc2RetryTagKey"
                                            },
                                            "ConsulEc2RetryTagValue": {
                                                "Ref": "ConsulEc2RetryTagValue"
                                            },
                                            "QSS3BucketName": {
                                                "Ref": "QSS3BucketName"
                                            },
                                            "QSS3KeyPrefix": {
                                                "Fn::Join": [
                                                    "", [{
                                                            "Ref": "QSS3KeyPrefix"
                                                        },
                                                        "/submodules/quickstart-hashicorp-consul/"
                                                    ]
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "\n",
                                "apt-get -y install docker-ce \n",
                                "/usr/local/bin/cfn-init",
                                " --verbose ",
                                " --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource NomadServerLaunchConfig",
                                " --configsets nomad_install",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "NOMAD_BOOTSTRAP_FILE=install_server.sh\n",
                                "NOMAD_BOOTSTRAP=", {
                                    "Ref": "QuickStartS3URL"
                                },
                                "/", {
                                    "Ref": "QSS3BucketName"
                                },
                                "/", {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "/scripts/",
                                "${NOMAD_BOOTSTRAP_FILE}",
                                "\n",
                                "wget ${NOMAD_BOOTSTRAP} \n",
                                "chmod 755 ./${NOMAD_BOOTSTRAP_FILE} \n",
                                "./${NOMAD_BOOTSTRAP_FILE} \n",
                                "/usr/local/bin/cfn-signal -e $? ",
                                " -e $?",
                                " '", {
                                    "Ref": "NomadServerWaitHandle"
                                },
                                "'"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "PrivateNomadClientASG": {
            "Properties": {
                "DesiredCapacity": {
                    "Ref": "PrivateNomadClientNodes"
                },
                "LaunchConfigurationName": {
                    "Ref": "PrivateNomadClientLaunchConfig"
                },
                "MaxSize": {
                    "Ref": "PrivateNomadClientNodes"
                },
                "MinSize": {
                    "Ref": "MinPrivateNomadClientNodes"
                },
                "Tags": [{
                    "Key": "Name",
                    "PropagateAtLaunch": "true",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "PrivateNomadClient"
                            ]
                        ]
                    }
                }, {
                    "Key": "Datacenter",
                    "PropagateAtLaunch": "true",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::Region"
                                },
                                "private"
                            ]
                        ]
                    }
                }],
                "VPCZoneIdentifier": [{
                    "Ref": "PrivateSubnet1ID"
                }, {
                    "Ref": "PrivateSubnet2ID"
                }, {
                    "Ref": "PrivateSubnet3ID"
                }]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "PrivateNomadClientLaunchConfig": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "nomad_install": [
                            "install_awscli"
                        ]
                    },
                    "install_awscli": {
                        "commands": {
                            "01_chmod_and_chown_nomad": {
                                "command": "chmod 0755 /usr/local/bin/nomad && chown root:root /usr/local/bin/nomad"
                            }
                        },
                        "commands": {
                            "02_install_awscli": {
                                "command": "pip install awscli"
                            }
                        },
                        "files": {
                            "/etc/cron.hourly/ecr-cred-refresh": {
                                "content": {
                                    "Fn::Sub": [
                                        "#!/bin/bash\naws ecr get-login --region=${Region} |  bash", {
                                            "Region": {
                                                "Ref": "AWS::Region"
                                            }
                                        }
                                    ]
                                },
                                "group": "root",
                                "mode": "00700",
                                "owner": "root"
                            }
                        },
                        "packages": {
                            "apt": {
                                "curl": [],
                                "unzip": []
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "nomadinstanceprofile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "US1604HVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "NomadInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroups": [{
                    "Ref": "NomadSecGroup"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -x\n",
                                "apt-get -y update\n",
                                "apt-get -y install  python-setuptools python-pip\n",
                                "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \n",
                                "add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \n",
                                "apt-get -y update \n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "/usr/local/bin/cfn-init",
                                " --verbose ",
                                " --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource PrivateNomadClientLaunchConfig",
                                " --configsets nomad_install",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# /usr/bin/pip install awscli\n",
                                "sleep 5 && which awscli\n", {
                                    "Fn::Sub": [
                                        "wget https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/submodules/quickstart-hashicorp-consul/scripts/consul_client_bootstrap.sh\n", {
                                            "QSS3BucketName": {
                                                "Ref": "QSS3BucketName"
                                            },
                                            "QSS3KeyPrefix": {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        }
                                    ]
                                },
                                "",
                                "chmod 755 ./consul_client_bootstrap.sh\n", {
                                    "Fn::Sub": [
                                        "./consul_client_bootstrap.sh --consul_tag_key ${ConsulEc2RetryTagKey} --consul_tag_value ${ConsulEc2RetryTagValue} --s3url https://s3.amazonaws.com --s3bucket ${QSS3BucketName} --s3prefix ${QSS3KeyPrefix}", {
                                            "ConsulEc2RetryTagKey": {
                                                "Ref": "ConsulEc2RetryTagKey"
                                            },
                                            "ConsulEc2RetryTagValue": {
                                                "Ref": "ConsulEc2RetryTagValue"
                                            },
                                            "QSS3BucketName": {
                                                "Ref": "QSS3BucketName"
                                            },
                                            "QSS3KeyPrefix": {
                                                "Fn::Join": [
                                                    "", [{
                                                            "Ref": "QSS3KeyPrefix"
                                                        },
                                                        "/submodules/quickstart-hashicorp-consul/"
                                                    ]
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "\n",
                                "echo 'This is the home directory' $HOME \n",
                                "apt-get -y install docker-ce \n",
                                "NOMAD_BOOTSTRAP_FILE=install_client.sh\n",
                                "NOMAD_BOOTSTRAP=", {
                                    "Ref": "QuickStartS3URL"
                                },
                                "/", {
                                    "Ref": "QSS3BucketName"
                                },
                                "/", {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "/scripts/",
                                "${NOMAD_BOOTSTRAP_FILE}",
                                "\n",
                                "wget ${NOMAD_BOOTSTRAP} \n",
                                "chmod 755 ./${NOMAD_BOOTSTRAP_FILE} \n",
                                "./${NOMAD_BOOTSTRAP_FILE} private\n",
                                "apt-get -y install docker-ce \n", {
                                    "Fn::Sub": [
                                        "aws ecr get-login --region=${Region} |  bash\n", {
                                            "Region": {
                                                "Ref": "AWS::Region"
                                            }
                                        }
                                    ]
                                },
                                "/usr/local/bin/cfn-signal -e $? ",
                                " -e $?",
                                " '", {
                                    "Ref": "NomadClientWaitHandle"
                                },
                                "'"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "nomadinstanceprofile": {
            "Properties": {
                "Path": "/",
                "Roles": [{
                    "Ref": "nomadinstancerole"
                }]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "nomadinstancerole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        }
                    }],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [{

                    "PolicyDocument": {
                        "Statement": [{
                            "Action": "ec2:Describe*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }, {
                            "Action": "elasticloadbalancing:Describe*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }, {
                            "Action": [
                                "cloudwatch:ListMetrics",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:Describe*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }, {
                            "Action": "autoscaling:Describe*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }],
                        "Version": "2012-10-17"
                    },
                    "PolicyName": "EC2ReadOnly"
                }, {
                    "PolicyDocument": {
                        "Statement": [{
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:GetRepositoryPolicy",
                                "ecr:DescribeRepositories",
                                "ecr:ListImages",
                                "ecr:DescribeImages",
                                "ecr:BatchGetImage"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }],
                        "Version": "2012-10-17"
                    },
                    "PolicyName": "ECR_readonly"
                }]
            },
            "Type": "AWS::IAM::Role"
        }
    }
}
